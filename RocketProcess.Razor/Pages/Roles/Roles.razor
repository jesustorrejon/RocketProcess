@page "/Roles"
@using RocketProcess.Shared.Entidades
@inject IDialogService DialogService
@inject IRoleServices RoleServices
@attribute [Authorize]

<h3 class="text-center pb-3">Roles</h3>
@*@if (rol is null || EnumRoles is null)
{
    <div class="d-flex align-items-center text-center">
        <MudProgressCircular Color="Color.Info" Indeterminate="true" />
    </div>
}
else
{*@
    <MudDataGrid Outlined="true" Hover="true" T="Rol" Items="@EnumRoles" Virtualize="true" FixedHeader="true" Height="350px"
             Filterable="true" FilterMode="@DataGridFilterMode.ColumnFilterRow" Loading="@(EnumRoles is null)">
        <Columns>
            <Column T="Rol" Field="Id_Rol" Title="#" />
            <Column T="Rol" Field="Nombre_Rol" Title="Nombre" />
            <Column Filterable="false" Sortable="false" T="Rol" CellClass="d-flex justify-end">
                <CellTemplate>
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Outlined.Edit" OnClick="@(e => Modificar(context.Item))" />
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Filled.Delete" OnClick="@(e => Eliminar(context.Item))" />
                </CellTemplate>
            </Column>
        </Columns>
    </MudDataGrid>
    <MudCardActions Class="align-items-center pt-2 row flex-row-reverse">
        <MudButton Class="col-lg-2 col-md-2 col-sm-12 col-xs-12 ml-5 mt-2 btn btn-info" Variant="Variant.Filled" Color="Color.Info" StartIcon="fas fa-user-plus">
            <MudText Class="pl-2">Agregar</MudText>
        </MudButton>
    </MudCardActions>
@*}*@

@code {
    private IEnumerable<Rol> EnumRoles;
    private Rol rol { get; set; }
    public MudProgressCircular progress { get; set; }

    protected override async Task OnInitializedAsync()
    {
        rol = new Rol();
        EnumRoles = await RoleServices.GetAll();
    }

    private void Modificar(object xRol)
    {
        var p = new DialogParameters();
        var options = new DialogOptions { CloseOnEscapeKey = true, DisableBackdropClick = true };
        p.Add("Rol", xRol);
        DialogService.Show<RolEdit>("", p, options);
    }

    private void Eliminar(object xUsuario)
    {
        //var p = new DialogParameters();
        //var options = new DialogOptions { CloseOnEscapeKey = true, DisableBackdropClick = true };
        //p.Add("usuario", xUsuario);
        //DialogService.Show<UserDelete>("", p, options);
    }
}
