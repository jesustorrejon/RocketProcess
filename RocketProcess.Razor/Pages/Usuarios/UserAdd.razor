@inject ILoginServices LoginServices
@inject IUserServices UserServices
@inject IRoleServices RoleServices

<style>
    .caja {
        padding-top: 1em;
        padding-bottom: 1em;
    }
</style>
<MudDialog DisableSidePadding="true">
        <TitleContent>
            <MudText>Editar Usuario</MudText>
        </TitleContent>
        <DialogContent>
@if (_ListUser is null || _rol is null)
{
    <div class="d-flex align-items-center text-center">
        <MudProgressCircular Color="Color.Info" Indeterminate="true" />
    </div>
}
else
{
    
            <MudContainer Style="max-height: 60vh; overflow-y: scroll">
                <div class="caja">
                    <MudTextField @bind-Value="@_ListUser.Rut" Label="RUT" Variant="Variant.Outlined"></MudTextField>
                </div>
                <div class="caja">
                    <MudTextField @bind-Value="@_ListUser.Nombre" Label="Nombre" Variant="Variant.Outlined"></MudTextField>
                </div>
                <div class="caja">
                    <MudTextField @bind-Value="@_ListUser.Apell_Paterno" Label="Apellido Paterno" Variant="Variant.Outlined"></MudTextField>
                </div>
                <div class="caja">
                    <MudTextField @bind-Value="@_ListUser.Apell_Materno" Label="Apellido Materno" Variant="Variant.Outlined"></MudTextField>
                </div>
                <div class="caja">
                    <MudTextField @bind-Value="@_ListUser.Correo" Label="Correo" Variant="Variant.Outlined"></MudTextField>
                </div>
                <div class="caja">
                    <MudTextField @bind-Value="@_ListUser.Clave" Label="Clave" Variant="Variant.Outlined"></MudTextField>
                </div>
                <div class="caja">
                    <MudTextField @bind-Value="@_ListUser.Telefono" Label="Telefono" Variant="Variant.Outlined"></MudTextField>
                </div>
                <div class="caja">
                    <MudTextField @bind-Value="@_ListUser.Direccion" Label="Direccion" Variant="Variant.Outlined"></MudTextField>
                </div>
                <div class="caja">
                    <MudSelect T="int" Placeholder="Selecciona un rol" @bind-Value="_ListUser.Id_Rol">
                        @foreach (var rol in EnumRoles)
                    {
                         <MudSelectItem T="int" Value="@rol.Id_Rol">@rol.Nombre_Rol</MudSelectItem>
                    }
                    </MudSelect>
                </div>
            </MudContainer>
        
       
}
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancelar</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Grabar</MudButton>
 </DialogActions>
    </MudDialog>


@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    public Usuario usuario { get; set; } = new Usuario();

    public Rol _rol { get; set; } = new Rol();
    public IEnumerable<Rol> EnumRoles { get; set; }
    public int Id_Rol { get; set; }

    private Login login { get; set; }
    private ListUser _ListUser { get; set; }

    protected override async Task OnInitializedAsync()
    {
        //var result = await LoginServices.LoginConnect(usuario.Correo, usuario.Clave);
        EnumRoles = await RoleServices.GetAll();
        //login = result.FirstOrDefault();
        _ListUser = new ListUser();
    }

    async void Submit()
    {
        var result = await UserServices.Save(_ListUser);

        string mensaje = "";

        if (result.Result.Success)
        {
            mensaje = "Guardado exitosamente";
        }
        else
        {
            mensaje = @$"No se logró guaradar. {Environment.NewLine} {result.Result.Error}";
        }

        var dialog = await DialogService.ShowMessageBox("Mensaje", mensaje);

        if (dialog.Value)
        {
            MudDialog.Close(DialogResult.Ok(result.Result.Success));
        }
    }
    void Cancel() => MudDialog.Close(false);
}
